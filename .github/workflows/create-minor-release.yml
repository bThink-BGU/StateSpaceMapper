# This is a basic workflow to help you get started with Actions

name: Create a new minor release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      releaseTitle:
        description: "Title for the release"
        required: false
        default: ""

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract next version
        run: |
          VER_MAJOR=`sed -nE 's|[ \t]*<version>([0-9]+)\.[0-9]+\.[0-9]*<.*|\1|p' pom.xml | head -n 1`
          VER_MINOR=`sed -nE 's|[ \t]*<version>[0-9]+\.([0-9]+)\.[0-9]*<.*|\1|p' pom.xml | head -n 1`
          VER_PATCH=`sed -nE 's|[ \t]*<version>[0-9]+\.[0-9]+\.([0-9]*)<.*|\1|p' pom.xml | head -n 1`
                    
          VER_MINOR=$((${VER_MINOR} +1))
          VER_PATCH=0
          VER=${VER_MAJOR}.${VER_MINOR}.${VER_PATCH}
          echo "VER==${VER}"
          
          echo "VER_PATCH=${VER_PATCH}" >> $GITHUB_ENV
          echo "VER_MINOR=${VER_MINOR}" >> $GITHUB_ENV
          echo "VER_MAJOR=${VER_MAJOR}" >> $GITHUB_ENV
          echo "VER=${VER}" >> $GITHUB_ENV
      
      - name: Raise POM and README.md version
        run: |
          perl -pi -e '$a=1 if(!$a && s|(<version>)[0-9]+\.[0-9]+\.[0-9]*|${1}${{ env.VER }}|);' pom.xml
          perl -pi -e '$a=1 if(!$a && s|(<version>)[0-9]+\.[0-9]+\.[0-9]*|${1}${{ env.VER }}|);' README.md
          
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: |
          mvn package -P"uber-jar"
          ls -al
          ls -al target/
          
      - name: Push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "raise version"
          git push
          
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          gh release create ${{ env.VER }} -t "Release ${{ env.VER }}" ./target/StateSpaceMapper-${{ env.VER }}.uber.jar
